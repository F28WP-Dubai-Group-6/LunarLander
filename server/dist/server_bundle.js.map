{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"socket.io\"","webpack:///./server/server.js","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///./shared/Consts.js","webpack:///./server/src/Game/Player.js","webpack:///./server/src/Game/Game.js","webpack:///./server/src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","express","default","main","app","http","createServer","use","static","req","res","sendFile","__dirname","listen","console","log","EVENTS","REQUEST","ack","DEFAULTS","BOOST","P_ROTATE","N_ROTATE","Player","constructor","socket","position","rotation","this","x","y","Math","PI","mass","velocity","torque","force","physics","calcPosition","dt","prevPosition","calcRotation","prevRotation","applyForce","isAlongNormal","sin","cos","applyTorque","calcVelocity","acc","calcPhysics","values","forEach","calculateForce","calculateTorque","getSerialized","id","update","didPositionChange","didRotationChange","Game","d0","Date","now","players","terrainSeed","random","setInterval","getPlayers","map","v","addPlayer","undefined","removePlayer","movePlayer","type","_tick","player","emit","io","IO","game","on","broadcast","typeOfMovement"],"mappings":"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","file":"server_bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/server/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"socket.io\");","// Library Imports.\r\nconst express = require('express');\r\nconst { default: main } = require('./src/main');\r\nconst app = express()\r\nvar http = require('http').createServer(app);\r\n\r\n// Serves client folder as a static resource at root url.\r\napp.use('/', express.static('client'))\r\n// Serves /client/index.html as entry point to the client.\r\napp.get('/', (req, res) => {\r\n    res.sendFile(__dirname + '/index.html');\r\n});\r\n\r\n// Listens for http connections on port 3000.\r\nhttp.listen(3000, () => {\r\n    console.log('listening on *:3000');\r\n});\r\n\r\n// Socket.io entrypoint.\r\nmain(http)","module.exports = require(\"express\");","module.exports = require(\"http\");","// Used for Socket.io events where Server wnats to broadcast to all clinets \r\n// expecting no acknowledgement.\r\nexport const EVENTS = {\r\n    SERVER_TICK: 'SERVER-TICK',\r\n    SERVER_UPDATE_PLAYERS: 'SERVER-UPDATE-PLAYERS',\r\n    SERVER_UPDATE_PLAYER: 'SERVER-UPDATE-PLAYER',\r\n\r\n    PLAYER_HAS_MOVED: 'PLAYER-HAS-MOVED'\r\n}\r\n\r\n// Used for Socket.io events where ether Client or Server wants to request data\r\n// usually resolved by sending an acknowledgement.\r\nexport const REQUEST = {\r\n    REQUEST_TERRAIN: {\r\n        req: 'REQUEST-TERRAIN',\r\n        ack: 'REQUEST-TERRAIN-ACK'\r\n    },\r\n    REQUEST_NEW_PLAYER: {\r\n        req: 'REQUEST-NEW-PLAYER',\r\n        ack: 'REQUEST-NEW-PLAYER-ACK'\r\n    },\r\n    REQUEST_DELETE_PLAYER: {\r\n        req: 'REQUEST-DELETE-PLAYER',\r\n        ack: 'REQUEST-DELETE-PLAYER-ACK'\r\n    }\r\n}\r\n\r\n// Used to store Default values for various physics and other calculations\r\nexport const DEFAULTS = {\r\n    KEYMAP: {\r\n        'ArrowLeft': 'N_ROTATE',\r\n        'ArrowRight': 'P_ROTATE',\r\n        'Space': 'BOOST'\r\n    },\r\n    MOVEMENT_STRENGTH: {\r\n        BOOST: 0.5,\r\n        P_ROTATE: 0.1,\r\n        N_ROTATE: -0.1\r\n    }\r\n}","import PhysicsTest from \"./Physics/PhysicsTest\"\r\n\r\n// Class representing a player.\r\nexport class Player {\r\n    constructor({socket, position, rotation}) {\r\n        // Socket associated with the player\r\n        this.socket = socket\r\n        // Players position vector in 2D space\r\n        this.position = position || {x: 0, y: 0}\r\n        // Players rotation in radians.\r\n        this.rotation = rotation || Math.PI * 2\r\n\r\n\r\n        // Mass of the player\r\n        this.mass = 1\r\n        // Current velocity applied to player\r\n        this.velocity = {x: 0, y: 0}\r\n        // Current torque applied to player\r\n        this.torque = 0\r\n        // Current force being applied\r\n        this.force = {x: 0, y: 0}\r\n        // List of active Physics bodies on the player.\r\n        this.physics = {\r\n            //test: new PhysicsTest()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculate the Position of the Player\r\n     * @param {Number} dt \r\n     */\r\n    calcPosition(dt) {\r\n        const prevPosition = {...this.position}\r\n\r\n        this.position.x += this.velocity.x * dt * 100;\r\n        this.position.y += this.velocity.y * dt * 100;\r\n\r\n        return (this.position.x !== prevPosition.x) || (this.position.y !== prevPosition.y)\r\n    }\r\n\r\n    /**\r\n     * Calculate the rotatioon of the player\r\n     * @param {Number} dt \r\n     */\r\n    calcRotation(dt) {\r\n        const prevRotation = this.rotation\r\n        this.rotation += this.torque * dt\r\n\r\n        return this.rotation !== prevRotation\r\n    }\r\n\r\n    /**\r\n     * Apply a force to the player\r\n     * @param {Object} force \r\n     */\r\n    applyForce(force, isAlongNormal) {\r\n        this.force = {\r\n            x: isAlongNormal ? force.x * -Math.sin(this.rotation): force.x, \r\n            y: isAlongNormal ? force.y * Math.cos(this.rotation): force.y\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply a torque to the player\r\n     * @param {Number} rot \r\n     */\r\n    applyTorque(torque) {\r\n        return this.torque += torque\r\n    }\r\n\r\n     /**\r\n     * Calculate the velocity of the player\r\n     */\r\n    calcVelocity(dt) {\r\n        const acc = {\r\n            x: -this.force.x / this.mass,\r\n            y: -this.force.y / this.mass\r\n        }\r\n\r\n        this.velocity.x += acc.x * dt\r\n        this.velocity.y += acc.y * dt\r\n\r\n        this.force = {x: 0, y: 0}\r\n    }\r\n\r\n    calcPhysics(dt) {\r\n        Object.values(this.physics).forEach(p => {\r\n            this.force = p.calculateForce(dt)\r\n            this.torque = p.calculateTorque(dt)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Returns serialized form of Player.\r\n     * Easy to transmit over Socket.emit().\r\n     * @returns  Serialized form of Player.\r\n     */\r\n    getSerialized() {\r\n        return {\r\n            id: this.socket.id,\r\n            position: this.position,\r\n            rotation: this.rotation\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Runs Every frame to perform physics calculations.\r\n     * @param {Number} dt \r\n     */\r\n    update(dt) {\r\n        this.calcPhysics(dt)\r\n        this.calcVelocity(dt)\r\n        const didPositionChange = this.calcPosition(dt)\r\n        const didRotationChange = this.calcRotation(dt)\r\n\r\n        return didPositionChange || didRotationChange\r\n    }\r\n}","// Interface imports\r\nimport { Socket } from 'socket.io';\r\n\r\n// Import Objects and Classes\r\nimport { DEFAULTS, EVENTS } from \"../../../shared/Consts\"\r\nimport { Player } from \"./Player\"\r\n\r\n// Class representing the Game.\r\nexport default class Game {\r\n    \r\n    constructor() {\r\n        // Used to calculate delta-time (dt, time between consecutive ticks)\r\n        this.d0 = Date.now()\r\n        // List of all the players in the game. {Socket.id: Socket}\r\n        this.players = {}\r\n        // Seed for terrain. Consistant across all clients.\r\n        this.terrainSeed = Math.random()\r\n        // Runs the update function every 1/60th of a second.\r\n        setInterval(this.update.bind(this), 1000/60);\r\n\r\n    }\r\n\r\n    /**\r\n     * @returns All players in the game.\r\n     */\r\n    getPlayers() {\r\n        return Object.values(this.players).map(v => v.getSerialized())\r\n    }\r\n\r\n    /**\r\n     * Adds a player to the game.\r\n     * @param {Socket} socket Socket of the player to add.\r\n     */\r\n    addPlayer(socket) {\r\n        this.players[socket.id] = new Player({\r\n            socket: socket,\r\n            position: {x: 500 * Math.random(), y: 100},\r\n            rotation: undefined\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Removes a player to the game.\r\n     * @param {Socket} socket Socket of the player to remove.\r\n     */\r\n    removePlayer(socket) {\r\n        delete this.players[socket.id]\r\n    }\r\n\r\n    /**\r\n     * Function that moves the player in responce to Keybpard input\r\n     * @param {Socket} socket \r\n     * @param {String} type \r\n     */\r\n    movePlayer(socket, type) {\r\n        if(this.players[socket.id]) {\r\n            switch (type) {\r\n                case 'BOOST':\r\n                    this.players[socket.id].applyForce({\r\n                        x: DEFAULTS.MOVEMENT_STRENGTH.BOOST,\r\n                        y: DEFAULTS.MOVEMENT_STRENGTH.BOOST\r\n                    }, true)\r\n                    break;\r\n            \r\n                case 'P_ROTATE':\r\n                    this.players[socket.id].applyTorque(DEFAULTS.MOVEMENT_STRENGTH.P_ROTATE)\r\n                    break;\r\n\r\n                case 'N_ROTATE':\r\n                    this.players[socket.id].applyTorque(DEFAULTS.MOVEMENT_STRENGTH.N_ROTATE)\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Update Function called every 1/60th of a second.\r\n     */\r\n    update() {\r\n        const dt = this._tick() / 1000\r\n        Object.values(this.players).forEach(player => {\r\n            player.socket.emit(EVENTS.SERVER_TICK, dt)\r\n            const pchange = player.update(dt)\r\n            if(pchange){\r\n                player.socket.emit(EVENTS.SERVER_UPDATE_PLAYER, player.getSerialized())\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @private Used to calculate delta-time (dt, time between consecutive ticks)\r\n     */\r\n    _tick() {\r\n        var now = Date.now();\r\n        var dt = now - this.d0;\r\n        this.d0 = now;\r\n        return dt\r\n    }\r\n}","// Library Imports\r\nimport { EVENTS, REQUEST } from '../../shared/Consts';\r\nimport Game from './Game/Game';\r\nimport IO from 'socket.io';\r\n\r\n// Main\r\nexport default function main(http) {\r\n    // Create in instance of Socket.io\r\n    const io = IO(http)\r\n    // Creates an instance of the Game\r\n    const game = new Game()\r\n\r\n\r\n    // Listens for 'connection' event\r\n    io.on('connection', socket => {\r\n        console.log('User connected', socket.id)\r\n\r\n        // Listens for a request for terrain informaiton.\r\n        socket.on(REQUEST.REQUEST_TERRAIN.req, () => {\r\n            // Sends terrain seed as acknowledgement.\r\n            socket.emit(REQUEST.REQUEST_TERRAIN.ack, game.terrainSeed)\r\n        })\r\n\r\n        // Listens for a request to add player to the Game.\r\n        socket.on(REQUEST.REQUEST_NEW_PLAYER.req, () => {\r\n            // Adds current connected player to the game.\r\n            game.addPlayer(socket)\r\n            // Sends an acknowledgement with a list of all players in the game to the ender of the request.\r\n            socket.emit(REQUEST.REQUEST_NEW_PLAYER.ack, game.getPlayers())\r\n            // Sends a list of all players in the game to the rest of the players in the game.\r\n            socket.broadcast.emit(EVENTS.SERVER_UPDATE_PLAYERS, game.getPlayers())\r\n        })\r\n\r\n        // Listen for PLayer Moved events and tell game to move the player.\r\n        socket.on(EVENTS.PLAYER_HAS_MOVED, typeOfMovement => game.movePlayer(socket, typeOfMovement))\r\n\r\n        // Listens for 'disconnect' events.\r\n        socket.on('disconnect', () => {\r\n            // Removes disconected player from the game.\r\n            game.removePlayer(socket)\r\n             // Sends a list of all players in the game to the disconnected player. (Might be redundant)\r\n            socket.emit(EVENTS.SERVER_UPDATE_PLAYERS, game.getPlayers())\r\n             // Sends a list of all players in the game to the rest of the players in the game.\r\n            socket.broadcast.emit(EVENTS.SERVER_UPDATE_PLAYERS, game.getPlayers())\r\n\r\n            console.log('User disconnected', socket.id)           \r\n        })\r\n    });\r\n}\r\n\r\n"],"sourceRoot":""}