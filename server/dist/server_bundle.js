require("source-map-support").install(),function(t){var e={};function o(i){if(e[i])return e[i].exports;var r=e[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.m=t,o.c=e,o.d=function(t,e,i){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)o.d(i,r,function(e){return t[e]}.bind(null,r));return i},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="/server/dist/",o(o.s=1)}([function(t,e){t.exports=require("socket.io")},function(t,e,o){(function(t){const e=o(2),{default:i}=o(4),r=e();var s=o(3).createServer(r);r.use("/",e.static("client")),r.get("/",(e,o)=>{o.sendFile(t+"/index.html")}),s.listen(3e3,()=>{console.log("listening on *:3000")}),i(s)}).call(this,"/")},function(t,e){t.exports=require("express")},function(t,e){t.exports=require("http")},function(t,e,o){"use strict";o.r(e),o.d(e,"default",(function(){return f}));const i="SERVER-TICK",r="SERVER-UPDATE-PLAYERS",s="PLAYER-HAS-MOVED",n={req:"REQUEST-TERRAIN",ack:"REQUEST-TERRAIN-ACK"},c={req:"REQUEST-NEW-PLAYER",ack:"REQUEST-NEW-PLAYER-ACK"},a={BOOST:.5,P_ROTATE:.1,N_ROTATE:-.1};var l=o(0),u=o.n(l);class h{constructor(){if(this.constructor==h)throw new Error("Physics is an Abstract classes. Abstract classes can't be instantiated.")}calculateForce(){throw new Error("Abstract Method has no implementation")}calculateTorque(){throw new Error("Abstract Method has no implementation")}}class y extends h{calculateForce(t){return{x:.1,y:0}}calculateTorque(t){return 0}}class d{constructor({socket:t,position:e,rotation:o}){this.socket=t,this.position=e||{x:0,y:0},this.rotation=o||2*Math.PI,this.mass=1,this.velocity={x:0,y:0},this.torque=0,this.force={x:0,y:0},this.physics={test:new y}}calcPosition(t){const e={...this.position};return this.position.x+=this.velocity.x*t*100,this.position.y+=this.velocity.y*t*100,this.position.x!==e.x||this.position.y!==e.y}calcRotation(t){const e=this.rotation;return this.rotation+=this.torque*t,this.rotation!==e}applyForce(t,e){this.force={x:e?t.x*-Math.sin(this.rotation):t.x,y:e?t.y*Math.cos(this.rotation):t.y}}applyTorque(t){return this.torque+=t}calcVelocity(t){const e=-this.force.x/this.mass,o=-this.force.y/this.mass;this.velocity.x+=e*t,this.velocity.y+=o*t,this.force={x:0,y:0}}calcPhysics(t){Object.values(this.physics).forEach(e=>{this.force=e.calculateForce(t),this.torque=e.calculateTorque(t)})}getSerialized(){return{id:this.socket.id,position:this.position,rotation:this.rotation}}update(t){this.calcPhysics(t),this.calcVelocity(t);const e=this.calcPosition(t),o=this.calcRotation(t);return e||o}}class p{constructor(){this.d0=Date.now(),this.players={},this.terrainSeed=Math.random(),setInterval(this.update.bind(this),1e3/60)}getPlayers(){return Object.values(this.players).map(t=>t.getSerialized())}addPlayer(t){this.players[t.id]=new d({socket:t,position:{x:500*Math.random(),y:100},rotation:void 0})}removePlayer(t){delete this.players[t.id]}movePlayer(t,e){if(this.players[t.id])switch(e){case"BOOST":this.players[t.id].applyForce({x:a.BOOST,y:a.BOOST},!0);break;case"P_ROTATE":this.players[t.id].applyTorque(a.P_ROTATE);break;case"N_ROTATE":this.players[t.id].applyTorque(a.N_ROTATE)}}update(){const t=this._tick()/1e3;Object.values(this.players).forEach(e=>{e.socket.emit(i,t)})}_tick(){var t=Date.now(),e=t-this.d0;return this.d0=t,e}}function f(t){const e=u()(t),o=new p;e.on("connection",t=>{console.log("User connected",t.id),t.on(n.req,()=>{t.emit(n.ack,o.terrainSeed)}),t.on(c.req,()=>{o.addPlayer(t),t.emit(c.ack,o.getPlayers()),t.broadcast.emit(r,o.getPlayers())}),t.on(s,e=>o.movePlayer(t,e)),t.on("disconnect",()=>{o.removePlayer(t),t.emit(r,o.getPlayers()),t.broadcast.emit(r,o.getPlayers()),console.log("User disconnected",t.id)})})}}]);
//# sourceMappingURL=server_bundle.js.map